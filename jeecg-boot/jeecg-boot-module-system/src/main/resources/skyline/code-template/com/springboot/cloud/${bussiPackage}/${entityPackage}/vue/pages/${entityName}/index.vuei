<template>
  <a-card :bordered="false">
    <div class="table-page-search-wrapper">
      <a-form layout="inline">
        <a-row :gutter="24">
          <a-col :md="6" :sm="24">
            <a-form-item label="角色ID">
              <a-input v-model="queryParam.id" placeholder="请输入" />
            </a-form-item>
          </a-col>
          <a-col :md="6" :sm="24">
            <a-form-item label="角色名称">
              <a-input v-model="queryParam.name" placeholder="请输入" />
            </a-form-item>
          </a-col>
          <a-col :md="6" :sm="24">
            <a-form-item label="角色描述">
              <a-input v-model="queryParam.description" placeholder="请输入" />
            </a-form-item>
          </a-col>
          <a-col :md="6" :sm="24">
            <a-form-item label="状态">
              <a-select v-model="queryParam.enabled" placeholder="请选择" default-value="0">
                <a-select-option value="0">全部</a-select-option>
                <a-select-option value="1">正常</a-select-option>
                <a-select-option value="2">禁止</a-select-option>
              </a-select>
            </a-form-item>
          </a-col>
        </a-row>
        <a-row :gutter="24">
          <a-col :md="6" :sm="24">
            <a-form-item label="date1">
              <a-date-picker v-model="queryParam.date1" />
            </a-form-item>
          </a-col>
          <a-col :md="12" :sm="24">
            <a-form-item
              label="起止日期"
              :label-col="{lg: {span: 7}, sm: {span: 7}}"
              :wrapper-col="{lg: {span: 10}, sm: {span: 17} }"
            >
              <a-range-picker
                v-model="queryParam.date"
                v-decorator="[
                  'buildTime',
                  {rules: [{ required: true, message: '请选择起止日期' }]}
                ]"
                name="buildTime"
                style="width: 100%"
              />
            </a-form-item>
          </a-col>
          <a-col :md="6" :sm="24">
            <a-input v-model="queryParam.int1" placeholder="int1" />
          </a-col>
        </a-row>
        <a-row :gutter="24">
          <a-col :md="6" :sm="24">
            <span class="table-page-search-submitButtons">
              <a-button type="primary" @click="$refs.table.refresh(true)">查询</a-button>
              <a-button type="primary" @click="handleCreate()">新建</a-button>
            </span>
          </a-col>
        </a-row>
      </a-form>
    </div>

    <s-table
      ref="table"
      size="default"
      :columns="columns"
      :data="loadDataWithPage"
    >
      <span slot="action" slot-scope="text, record">
        <a @click="handleEdit(record.id)">编辑</a>
        <a-divider type="vertical" />
        <a-dropdown>
          <a class="ant-dropdown-link">
            更多 <a-icon type="down" />
          </a>
          <a-menu slot="overlay">
            <a-menu-item>
              <a href="javascript:;" @click="handleDelete(record.id)">删除</a>
            </a-menu-item>
          </a-menu>
        </a-dropdown>
      </span>
    </s-table>
  </a-card>
</template>

<script>
// eslint-disable-next-line no-unused-vars
import moment from 'moment'
import { STable } from '@/components'
// import { getRoleList, getServiceList } from '@/api/manage'

export default {
  name: '${entityName}',
  layout: 'basic-layout',
  components: {
    STable
  },
  data () {
    return {
      description: '列表使用场景：后台管理中的权限管理以及角色管理，可用于基于 RBAC 设计的角色权限控制，颗粒度细到每一个操作类型。',
      isCreate: false,
      visible: false,
      labelCol: {
        xs: { span: 24 },
        sm: { span: 5 }
      },
      wrapperCol: {
        xs: { span: 24 },
        sm: { span: 16 }
      },
      form: null,
      mdl: {},

      // 高级搜索 展开/关闭
      advanced: false,
      // 查询参数
      queryParam: {},
      // 表头
      columns: [
        {
          title: '唯一识别码',
          dataIndex: 'id'
        },
        {
          title: '角色名称',
          dataIndex: 'name'
        },
        {
          title: '角色描述',
          dataIndex: 'description'
        },
        {
          title: '状态',
          dataIndex: 'enabled',
          customRender: (value) => { return value ? '正常' : '禁用' }
        },
        {
          title: '时间',
          dataIndex: 'date1',
          sorter: true,
          customRender: (value) => { return value.substr(0, 10) + ' ' + value.substr(11, 8) }
        },
        {
          title: '操作',
          width: '150px',
          dataIndex: 'action',
          scopedSlots: { customRender: 'action' }
        }
      ],
      // 加载数据方法 必须为 Promise 对象

      loadDataWithPage: parameter => {
        const that = this
        if (this.queryParam.date1) {
          this.queryParam.date1 = moment(this.queryParam.date1).format('YYYY-MM-DD')
        }
        if (this.queryParam.date) {
          this.queryParam.startDate = moment(this.queryParam.date[0]).format('YYYY-MM-DD')
          this.queryParam.endDate = moment(this.queryParam.date[1]).format('YYYY-MM-DD')
          delete this.queryParam.date
        }

        return that.${r"$"}${entityName?uncap_first}Api.getByPage(parameter.pageNo, parameter.pageSize, { ...this.queryParam })
          .then(res => {
            console.log('getByPage', res)
            return res.data
          })
      },
      loadData: parameter => {
        const that = this
        return that.${r"$"}${entityName?uncap_first}Api.get${entityName}s({ ...this.queryParam })
          .then(res => {
            console.log('getPage', res)
            return res
          })
      },
      selectedRowKeys: [],
      selectedRows: []
    }
  },
  watch: {
    /*
      'selectedRows': function (selectedRows) {
        this.needTotalList = this.needTotalList.map(item => {
          return {
            ...item,
            total: selectedRows.reduce( (sum, val) => {
              return sum + val[item.dataIndex]
            }, 0)
          }
        })
      }
      */
  },
  activated () {
    this.$refs.table.refresh(true)
  },
  methods: {
    handleEdit (id) {
      this.$router.push({ path: '/${entityName?uncap_first}/' + id, params: {
        id: id
      }})
    },
    handleDelete (id) {
      const that = this
      that.${r"$"}${entityName?uncap_first}Api.del(id).then(res => {
        that.$refs.table.refresh(true)
      })
    },
    handleCreate () {
      this.$router.push({ path: '/${entityName?uncap_first}/0' })
    },
    toggleAdvanced () {
      this.advanced = !this.advanced
    }
  }
}
</script>
